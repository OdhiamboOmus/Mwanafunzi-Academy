rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow user creation and basic authentication
    match /users/{userType}/users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin users collection - only specific admin email can access
    match /admin_users/{adminId} {
      allow read, write: if request.auth != null && request.auth.email == 'official.poa.labs@gmail.com';
    }
    
    // Admin users in new structure - only specific admin email can access
    match /users/admins/users/{adminId} {
      allow read, write: if request.auth != null && request.auth.email == 'official.poa.labs@gmail.com';
    }
    
    // Lessons collection - temporarily open for testing
    match /lessons/{lessonId} {
      allow read, write: if true;
    }
    
    // Lessons metadata collection - temporarily open for testing
    match /lessonsMeta/{grade} {
      allow read, write: if true;
    }
    
    // Quizzes collection - temporarily open for testing
    match /quizzes/{grade}/{quizId} {
      allow read, write: if true;
    }
    
    // Quiz metadata collection - temporarily open for testing
    match /quizMeta/{grade} {
      allow read, write: if true;
    }
    
    // Quiz attempts collection - for student progress tracking
    match /quiz_attempts/{studentId} {
      allow read, write: if true;
    }
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
  }
}

// Firebase Storage Security Rules - simplified
service firebase.storage {
  match /b/{bucket}/o {
    // Allow basic file access for authenticated users
    match /users/{userType}/users/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin access for specific admin email
    match /admin_users/{adminId} {
      allow read, write: if request.auth != null && request.auth.email == 'official.poa.labs@gmail.com';
    }
    
    // Lessons storage - allow API key authentication for simple uploads
    match /lessons/{grade}/{lessonId} {
      allow read: if request.auth != null;
      allow write, create: if request.auth != null && (
        request.auth.email == 'official.poa.labs@gmail.com' ||
        request.auth.token.firebase.sign_in_provider == 'anonymous' ||
        request.auth.token.firebase.sign_in_provider == 'password'
      );
    }
    
    // Lessons metadata storage - allow API key authentication for simple uploads
    match /lessonsMeta/{grade} {
      allow read: if request.auth != null;
      allow write, create: if request.auth != null && (
        request.auth.email == 'official.poa.labs@gmail.com' ||
        request.auth.token.firebase.sign_in_provider == 'anonymous' ||
        request.auth.token.firebase.sign_in_provider == 'password'
      );
    }
    
    // Quiz media storage - allow API key authentication for simple uploads
    match /quiz_media/{grade}/{quizId} {
      allow read: if request.auth != null;
      allow write, create: if request.auth != null && (
        request.auth.email == 'official.poa.labs@gmail.com' ||
        request.auth.token.firebase.sign_in_provider == 'anonymous' ||
        request.auth.token.firebase.sign_in_provider == 'password'
      );
    }
  }
}